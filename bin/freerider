#!/usr/bin/env ruby

require 'thor'
require_relative '../lib/freerider'
require_relative '../lib/formatter'

##
# Command-line interface for Freerider
class FreeriderScript < Thor
  SUMMARY_BORDER = '=========================='
  RECORD_DELIMITER = SUMMARY_BORDER + SUMMARY_BORDER

  desc 'vehicles', "Get vehicles: location defaults to 'twincities', fuel_threshold defaults to '25'"
  option :location, default: 'twincities', aliases: :l
  option :fuel_threshold, type: :numeric, default: 25, aliases: :f
  def vehicles
    require_key

    vehicles = Freerider.new((options[:location] || ENV['LOCATION']), ENV['CONSUMER_KEY'])
    display(vehicles.find_vehicles(options[:fuel_threshold]))
  end

  private

  def display(vehicles)
    vehicles.each do |vehicle|
      puts RECORD_DELIMITER
      puts Formatter.format_vehicle(vehicle.to_json)
    end
    puts SUMMARY_BORDER
    # 25 is the current default
    notify_suffix = "with a fuel level below #{options[:fuel_threshold]} percent"
    if vehicles.size > 0
      cars = if vehicles.size > 1
               'cars'
             else
               'car'
             end

      print "#{vehicles.size} #{cars} found #{notify_suffix}"
    else
      print "No cars found #{notify_suffix}"
    end
    puts "\n#{SUMMARY_BORDER}"
  end

  # this is set using an environment variable
  def require_key
    return if ENV['CONSUMER_KEY']
    puts 'Set environment variable CONSUMER_KEY to your Car2Go consumer key.'
    puts 'For example:'
    puts '    $ CONSUMER_KEY=mykey bin/freerider v'
    false
  end
end

FreeriderScript.start(ARGV)
